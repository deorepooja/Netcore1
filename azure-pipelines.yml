# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '- task: Docker@2

      inputs:
       containerRegistry: 'Docker'
       repository: 'kubedevopconreg'
       command: 'buildAndPush'
       Dockerfile: '$(Build.SourcesDirectory)/netcore-1/Core_HelloWorld/Dockerfile'
       tags: 
       $(tag)
      'latest'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/s/netcore-1/Core_HelloWorld/pages'
    artifact: 'manifest'
    publishLocation: 'pipeline'

- stage: Deploy
   displayName: Deploy to Dev
   dependsOn: Build
   variable:
     acrsecret: K8exampleauth
   jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'k8sdev.default'
    pool: 
      vmImage: ubuntu-latest
    step: 
    - task: DownloadPipelineArtifact@2
       inputs:
         buildType: 'current'
         artifactName: 'manifest'
         targetPath: '$(Pipeline.Workspace)/manifest'
- task: KubernetesManifest@1
  inputs:
    action: 'createSecret'
    connectionType: 'kubernetesServiceConnection'
    kubernetesServiceConnection: 'Kubernate'
    namespace: 'default'
    secretType: 'dockerRegistry'
    secretName: '$(acrsecret)'
    dockerRegistryEndpoint: 'Docker'
         
- task: KubernetesManifest@1
  inputs:
    action: 'deploy'
    connectionType: 'kubernetesServiceConnection'
    kubernetesServiceConnection: 'Kubernate'
    namespace: 'default'
    manifests: 
     $(Pipeline.Workspace)/manifest/deployment.yaml 

